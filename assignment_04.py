# -*- coding: utf-8 -*-
"""Assignment_04.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gZcTBI1IzdG6rlA4mc7ZObE_oGp6s65O

# **Assignment - 04**

## Class Practics

Machine Learning
"""

print("Machine Learning")

import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_excel('Dhaka_Rent.xlsx')

df

df.head()

df1=pd.read_csv('Dhaka_Rent.csv')

df1

df.shape

df1.shape

df.isnull()

df.isnull().sum()

df.info()

plt.scatter(df.area,df.rent)

plt.scatter(df.area,df.rent)
plt.xlabel("Area")
plt.ylabel("Rent")
plt.title("Rent vs area")
plt.savefig("rent_area.jpg")

df.area.mean()

df.rent.mean()

df.describe()

x=df[["area"]]

y=df[["rent"]]

x

x.head()

y.head()

!pip install sklearn

from sklearn.linear_model import LinearRegression

reg=LinearRegression()

reg.fit(x,y)

reg.coef_

reg.intercept_

reg.predict([[4000]])

re=(((reg.coef_)*4000)+(reg.intercept_))
re

reg.predict(x)

df["predicted rent"]=reg.predict(x)

df

df[["rent"]]

res=df[["rent"]]-df[["predicted rent"]]
res
df

#df["resudual"]=df[["rent"]]-df[["predicted rent"]]

a=df["rent"]
a

b=df["predicted rent"]
b

c=a-b
c

df["Residuals"]=c

df

reg.predict([[5000]])

reg.predict([[5000]])

plt.plot(df.area,reg.predict(x))
plt.xlabel("Area")
plt.ylabel("Predicted Rent")
plt.title("Predicted Rent Line")

plt.plot(df.area,reg.predict(df[["area"]]))
plt.scatter(df.area,df.rent,color="red")
plt.xlabel("Area")
plt.ylabel("Predicted")
plt.title("Prediction")

reg.score(x,y)

from sklearn.metrics import mean_squared_error

mean_squared_error(df[["area"]],reg.predict(df[["area"]]))

df.head()

#mean_squared_error(x,df.predicted rent)

import warnings as wr
wr.filterwarnings("ignore")

reg.predict([[6000]])

#mean_squared_error(x,df.predicted rent)

"""## **Assignment Solved**"""

import pandas as pd
import matplotlib.pyplot as plt

data=pd.read_csv('Height_Weight.csv')

data.head()

plt.scatter(data.Height,data.Weight)
plt.xlabel("Height")
plt.ylabel("Weight")
plt.title("Height & Weight")

data.info()

x=data[["Height"]]
x.head()

y=data[["Weight"]]
y.head()

data.describe()

!pip install sklearn

from sklearn.linear_model import LinearRegression

reg=LinearRegression()

reg.fit(x,y)

reg.coef_

reg.intercept_

reg.predict([[65]])

y=((reg.coef_)*65)+(reg.intercept_)
y

reg.predict(x)

data["Predicted"]=reg.predict(x)

data.head()

plt.plot(data.Height,reg.predict(data[["Height"]]))
plt.scatter(data.Height,data.Weight,color="red")
plt.xlabel("Height")
plt.ylabel("Weight")
plt.title("Height & Weight")

reg.score(x,y)

from sklearn.metrics import mean_squared_error

mean_squared_error(data[['Height']], reg.predict(data[['Height']]))

mean_squared_error(x,data.Predicted)

"""# Completed"""